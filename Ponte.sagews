Vetor de Forças Resultantes
b = vector([0,0,0,20000,0,20000,0,20000,0,20000,0,20000,0,0,0,0,0,0,0,0,0,0,0,0]);

# Matrix de Forças
A = Matrix([[0.70711e0,0.10e1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.10e1,0,0],[0.70711e0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.10e1,0],[0,-0.10e1,0.27480e0,0.10e1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0.96150e0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,-0.10e1,-0.58127e0,0,0.28736e0,0.10e1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0.81371e0,0,0.95782e0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,-0.10e1,-0.44729e0,0,0,0,0.44729e0,-0.10e1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0.89439e0,0,0.10e1,0,0.89439e0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0.10e1,-0.28736e0,0,0.58127e0,0.10e1,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.95782e0,0,0.81371e0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.10e1,-0.27480e0,0,0.10e1,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.96150e0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.70711e0,-0.10e1,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.70711e0,0,0,0,0.10e1],[-0.70711e0,0,-0.27480e0,0,0.58127e0,0.93630e0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[-0.70711e0,0,-0.96150e0,0,-0.81371e0,0.35119e0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.93630e0,-0.58127e0,0,0.27480e0,0.70711e0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.35119e0,-0.81371e0,0,-0.96150e0,-0.70711e0,0,0,0,0],[0,0,0,0,0,-0.93630e0,-0.28736e0,0,0.44729e0,0.92849e0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,-0.35119e0,-0.95782e0,0,-0.89439e0,0.37137e0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,-0.92849e0,-0.44729e0,0,0.28736e0,0.93630e0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0.37137e0,-0.89439e0,0,-0.95782e0,-0.35119e0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,-0.92849e0,0,0.92849e0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,-0.37137e0,-0.10e1,-0.37137e0,0,0,0,0,0,0,0,0,0,0,0,0]]);

# Vetor de Forças
x = A.solve_right(b)

x = vector(x)

lengths = Matrix([[0.99e1],[0.50e1],[0.728e1],[0.70e1],[0.86e1],[0.854e1],[0.1044e2],[0.80e1],[0.539e1],[0.1118e2],[0.120e2],[0.1118e2],[0.539e1],[0.80e1],[0.1044e2],[0.854e1],[0.86e1],[0.70e1],[0.728e1],[0.99e1],[0.50e1]])
resistances = Matrix([[1100,8500,6500,4300,2000,1200]])
prices = Matrix([[300,600,200,380,450,120]])

lr = lengths*resistances
lp = lengths*prices

def min_cost (length_resistance, length_price, s):
    tot = 0
    for i in range(0, length_resistance.nrows() - 1):
        for j in range(length_resistance.ncols() - 1, 0, -1):
            if (abs(s[i]) <= length_resistance[i,j]):
                tot = tot + length_price[i,j]
                break
    return tot

min_cost(lr, lp, x)








